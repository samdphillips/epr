#lang rhombus/static/and_meta

import:
  lib("syncvar/main.rkt") as syncvar

export:
  IVar
  MVar

def IVar = syncvar.#{make-ivar}

namespace IVar:
  export Exn
  annot.macro 'Exn':
    annot_meta.pack_predicate('syncvar.#{exn:fail:ivar?}')

annot.macro 'IVar':
  annot_meta.pack_predicate('syncvar.#{ivar?}',
                            '(($(statinfo_meta.dot_provider_key),
                               ivar_dot_provider))')

dot.macro 'ivar_dot_provider $left . $right':
  match right
  | 'put':     'fun (val): syncvar.#{ivar-put!}($left, val)'
  | 'try_get': 'fun (): syncvar.#{ivar-try-get}($left)'

def MVar = syncvar.#{make-mvar}

namespace MVar:
  export update
  expr.macro 'update($mvar, $val):
                $body
                ...':
    'syncvar.#{mvar-update!}($mvar, fun ($val): $body ...)'

annot.macro 'MVar':
  annot_meta.pack_predicate('syncvar.#{mvar?}',
                            '(($(statinfo_meta.dot_provider_key),
                               mvar_dot_provider))')

dot.macro 'mvar_dot_provider $left . $right':
  match right
  | 'get': 'fun (): syncvar.#{mvar-get}($left)'
  | 'swap': 'fun (v): syncvar.#{mvar-swap!}($left, v)'
